# .github/workflows/android-tests.yml
name: Android Tests

on:
  push:
    branches: [main, dev]

# jobs:
#   android-tests:
#     runs-on: ubuntu-latest

#     env:
#       JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
#       ANDROID_HOME: /usr/local/lib/android/sdk

#     steps:
    
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Enable KVM
#         run: |
#           echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
#           sudo udevadm control --reload-rules
#           sudo udevadm trigger --name-match=kvm

#       - name: Set up JDK 17
#         uses: actions/setup-java@v3
#         with:
#           distribution: 'temurin'
#           java-version: '17'

#       - name: Set up Node.js
#         uses: actions/setup-node@v4.1.0
#         with:
#           node-version: '20.13.1'

#       - name: Cache Node modules
#         uses: actions/cache@v3
#         with:
#           path: |
#             ~/.npm
#             ~/.cache/yarn
#           key: node-modules-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             node-modules-

#       - name: Install Yarn
#         run: npm install -g yarn

#       - name: Install dependencies
#         run: yarn install

#       - name: Set up Android SDK
#         uses: android-actions/setup-android@v2
#         with:
#           api-level: 33
#           build-tools: 33.0.2
#           target: 'android-33'

#       - name: Cache Gradle dependencies
#         uses: actions/cache@v3
#         with:
#           path: |
#             ~/.gradle/caches
#             ~/.gradle/wrapper
#           key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#           restore-keys: |
#             gradle-

#       - name: Grant execute permission for Gradlew
#         run: chmod +x android/gradlew

#       - name: Build Android project
#         run: |
#           cd android
#           ./gradlew assembleDebug
      
#       - name: Run Android-specific tests
#         uses: ReactiveCircus/android-emulator-runner@v1
#         with:
#           api-level: 33 # Specify the desired Android version
#           script: |
#             cd android
#             ./gradlew connectedAndroidTest

#       - name: Upload test results
#         if: always()
#         uses: actions/upload-artifact@v3
#         with:
#           name: test-results
#           path: android/app/build/test-results/testDebugUnitTest

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: '20.13.1'
          
      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install

      - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            distribution: 'temurin'
            java-version: '17'
      
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 29
          build-tools: 29.0.3
          target: 'android-29'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-

      - name: Grant execute permission for Gradlew
        run: chmod +x android/gradlew

      - name: Build Android project
        run: |
          cd android
          ./gradlew assembleDebug

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: cd android; ./gradlew connectedAndroidTest